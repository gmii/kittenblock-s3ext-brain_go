[
    "w", "設定私有雲端 IP:%s PORT:%n ID:%s PASSWORD:%s", "Owncloud","","","","",
    {
        "setup":"
  mySerial.begin(9600);\n  mySerial.println(F("AT+CWMODE=1"));\n  delay(1000);\n  mySerial.println("AT+CWJAP_DEF=\\"" + ssid + "\\",\\"" + pwd + "\\"");\n  delay(10000);\n  mySerial.println("AT+CIPSTART=\\"TCP\\",\\"" + ip + "\\"," + port + "");\n  delay(1000);\n  mySerial.println("AT+CIPMODE=1");\n  delay(1000);\n  mySerial.println("AT+CIPSEND");\n  delay(1000);\n
  while(mySerial.available()){\n
    mySerial.read();\n
  }\n
        ",
        "inc":"",
        "def":"
unsigned char buff[36] ={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};\n
int LED[9] = {0,0,0,0,0,0,0,0,0};\n
double val;\n
SoftwareSerial mySerial(13, 12);\n
        ",
        "work":"",
        "loop":"",
    }
],
[
    "w", "上傳資料%n,%n", "updata","","",
    {
        "setup":"",
        "inc":"",
        "def":"",
        "work":"
void uploadCloud(int a, int b, int c, int d){\n  a *= 100;\n  b *= 100;\n  c *= 100;\n  d *= 100;\n  buff[0] = a / 100000; buff[1] = a / 10000 % 10; buff[2] = a / 1000 % 10; buff[3] = a / 100 % 10; buff[4] = a / 10 % 10; buff[5] = a % 10;\n  buff[6] = b / 100000; buff[7] = b / 10000 % 10; buff[8] = b / 1000 % 10; buff[9] = b / 100 % 10; buff[10] = b / 10 % 10;\n buff[11] = b % 10;\n  buff[12] = c / 100000; buff[13] = c / 10000 % 10; buff[14] = c / 1000 % 10; buff[15] = c / 100 % 10; buff[16] = c / 10 % 10; buff[17] = c % 10;\n  buff[18] = d / 100000; buff[19] = d / 10000 % 10; buff[20] = d / 1000 % 10; buff[21] = d / 100 % 10; buff[22] = d / 10 % 10; buff[23] = d % 10;\n  buff[24] = 0; buff[25] = 0; buff[26] = 0; buff[27] = 0; buff[28] = 0; buff[29] = 0; buff[30] = 0; buff[31] = 0; buff[32] = 0; buff[33] = 0; buff[34] = 0; buff[35] = 0;\n  for(int i = 0; i < 36; ++i){\n    mySerial.print(buff[i]);\n  }\n  delay(600);\n}\n
        ",
        "loop":"",
    }
],
[
    "w", "計算資料回傳", "backdata",
    {
        "setup":"",
        "inc":"",
        "def":"",
        "work":"
void getCloudReturnValues(int &red, int &green, int &blue, double &num){\n  while(mySerial.available() >= 10){\n    if (mySerial.read() == 's'){\n      red = mySerial.read(); red -= 48;\n      green = mySerial.read(); green -= 48;\n      blue = mySerial.read(); blue -= 48;\n      int nums[6];\n      nums[0] = mySerial.read();\n      nums[1] = mySerial.read();\n      nums[2] = mySerial.read();\n      nums[3] = mySerial.read();\n      nums[4] = mySerial.read();\n      nums[5] = mySerial.read();\n      num = ((nums[0] - 48) * 100000 + (nums[1] - 48) * 10000 + (nums[2] - 48) * 1000 + (nums[3] - 48) * 100 + (nums[4] - 48) * 10 + (nums[5] - 48));\n      num /= 100;    }\n  }\n}\n

if(mySerial.available()>21){\n
  char Rxbuff[100];\n
  for(int i=0;i<22;i++){\n
    Rxbuff[i] = mySerial.read();\n
  }\n
  for(int i = 0 ; i<10;i++){\n
    if(Rxbuff[i] = ='s'){\n
      LED[0] = Rxbuff[i+1];\n
      LED[1] = Rxbuff[i+2];\n
      LED[2] = Rxbuff[i+3];\n
      LED[3] = Rxbuff[i+4];\n
      LED[4] = Rxbuff[i+5];\n
      LED[5] = Rxbuff[i+6];\n
      LED[6] = Rxbuff[i+7];\n
      LED[7] = Rxbuff[i+8];\n
      LED[8] = Rxbuff[i+9];\n
      val=((LED[3]-48)*100000+(LED[4]-48)*10000+(LED[5]-48)*1000+(LED[6]-48)*100+(LED[7]-48)*10+(LED[8]-48));\n
    }\n
  }\n
}\n
        ",
        "loop":"",
    }
],
[
    "r", "回傳值", "val",
    {
        "setup":"",
        "inc":"",
        "def":"",
        "work":"(val)",
        "loop":"",
    }
],